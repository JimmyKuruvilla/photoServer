

- use pm2 to manage the js service
- use restart:always in the docker-compose.yml to have the pg container restart
- relies on systemd to ensure db first, then pm2 service. See pm2.service.manualAddon


## todo
-- convert to use vite  + react
-- make buttons bigger on touch devices

-- display log files as type text
-- be able to explore in a direction given a date, not just within a folder
-- permadelete based on hashes

-- spacebar to be pause start and then stop. 
-- read EXIF data and rotate photos accordingly. 
-- remove media html `content` classes
- install postfix to get crontab logs, install mutt for better mail handling
-- db cleanup
-- script to check if db entry exists on disk, and then log it (then delete from db)

-- face count is broken due to venv setup

TODO
permadelete 
phase 1
- modify ingestion to calc hashes of new files, check if !inDeleted table before accepting
- still to do next

phase 2 permadelete script : done
- get all media with marked tag
- insert hashes into deleted table
- delete from disk
- delete from db
- delete from s3 (use aws sdk)

- aws sync --delete to s3. (has to be manual)

TODO
leave original service alone and build a new one along side it. 
0. refactor utils + guards
store a hash of a file on injest. So we can tell which files are the same.
3. videos need a thumbnail as well. 
- take first frame or 2seconds in. 

1. use express 5
// refactor listings

3. convert to react + vite

1. implement permadelete
 - add delete button to files with conf. maybe after react. 

2. maybe add a query for num faces detected once react is ready
and a button to rerun face detection on the current file - !

store the type of video or picture in the db so that the select random can use it to pick. 

refacotr db into "mdoels"